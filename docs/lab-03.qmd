---
title: "Lab 3: COVID-19"
subtitle: 'Ecosystem Science and Sustainability 330'
author:
  - name: https://github.com/SarahRoseCulhane
    email: sculhane@colostate.edu
format: html
 theme: Solar
---

```{r}
library(tidyverse); library(flextable)
data = read_csv('https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv')
```

Here is how I created an object called my.date set as "2022-02-01" and an object called my.state, set as "Colorado"

```{r}
my.date <- as.Date("2022-02-01")  
my.state <- "Colorado"
```

Here, I created a new subset

```{r}
colorado_data <- data %>%
  filter(state == my.state) %>%
  arrange(county, date) %>%
  group_by(county) %>%
  mutate(
    new_cases = cases - lag(cases, default = 0),  
    new_deaths = deaths - lag(deaths, default = 0)  
  ) %>%
  ungroup()

```

Here is the code I used to generate a data set of the 5 counties with the most cumulative cases

```{r}
top_cumulative_cases <- colorado_data %>%
  filter(date == my.date) %>%
  arrange(desc(cases)) %>%
  slice_head(n = 5) %>%
  select(county, cases) %>%
  rename("County" = county, "Cumulative Cases" = cases)
```

Here is the code I used to print the table

```{r}
print(top_cumulative_cases)
```

Here is the code I used to generate a table showing the top 5 counties with the most new cases

```{r}
top_new_cases <- colorado_data %>%
  filter(date == my.date) %>%
  arrange(desc(new_cases)) %>%
  slice_head(n = 5) %>%
  select(county, new_cases) %>%
  rename("County" = county, "New Cases" = new_cases)

print(top_new_cases)
```

**Question 3: Normalizing Data** I used the code to complete the following tasks:

-   Converted the STATE numeric into a character forced to 2 digits with a leading 0 (when needed)
-   Converted the COUNTY numeric into a character forced to 3 digits with leading 0â€™s (when needed)
-   Created a FIP variable the STATE numeric into a character forced to 2 digits with a leading 0 (when needed)

```{r}
pop_data <- pop_data %>%
  mutate(
    STATE = as.numeric(STATE),  # Ensure STATE is numeric
    COUNTY = as.numeric(COUNTY)  # Ensure COUNTY is numeric
  )

# Step 4: Create the STATE_FIP and COUNTY_FIP columns
pop_data <- pop_data %>%
  mutate(
    STATE_FIP = sprintf("%02d", STATE),  # Format STATE as a 2-digit character with leading zero
    COUNTY_FIP = sprintf("%03d", COUNTY),  # Format COUNTY as a 3-digit character with leading zero
    FIP = paste0(STATE_FIP, COUNTY_FIP)  # Combine to create the 5-digit FIP code
  )
```

1. Using this code, I kept only the columns containing "NAME" or "2021" but kept the "FIP" column, removing all state level rows

```{r}
pop_data_temp <- pop_data %>%
   select(contains("NAME"), contains("2021"), contains("FIP")) %>%
   filter(COUNTY_FIP != "000")
head(pop_data_temp)
```
2. The dimensions of the new data frame, called pop_data_temp, is a table with 3195 rows and 18 columns. The dimensions of the table itself is 3144 by 21.
```{r}
dim(pop_data_temp)
```
```{r}
glimpse(pop_data_temp)
```
Glimpse was used to get the names of the columns in the new data set.

3. The range of populations in Colorado in 2021 was 54 - 9809462 people.
```{r}
range(pop_data_temp$POPESTIMATE2021)
```



